<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>你们威哥的博客</title>
  
  <subtitle>简书博客地址 https://www.jianshu.com/u/a94f887f8776</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://aronligithub.github.io/"/>
  <updated>2018-08-11T15:06:16.602Z</updated>
  <id>https://aronligithub.github.io/</id>
  
  <author>
    <name>你们的威哥</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>kubernetes系列以及运维开发文章介绍</title>
    <link href="https://aronligithub.github.io/2018/08/11/kubernetes%E7%B3%BB%E5%88%97%E4%BB%A5%E5%8F%8A%E8%BF%90%E7%BB%B4%E5%BC%80%E5%8F%91%E6%96%87%E7%AB%A0%E4%BB%8B%E7%BB%8D/"/>
    <id>https://aronligithub.github.io/2018/08/11/kubernetes系列以及运维开发文章介绍/</id>
    <published>2018-08-11T15:04:22.000Z</published>
    <updated>2018-08-11T15:06:16.602Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>#原创内容，转载请注明出处</p></blockquote><p>博主地址：<a href="https://aronligithub.github.io/">https://aronligithub.github.io/</a></p><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><blockquote><p> <em>kubernetes作为当前最流行的容器编排领先技术之一，如果作为运维的你不学习怎么行呢？</em><br><img src="https://upload-images.jianshu.io/upload_images/13423234-1ca8c290d56896ec.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p></blockquote><p>如果你继续往下看我后续写的博客内容可以<strong>学习到什么内容</strong>呢？</p><blockquote><p><em>etcd 系列</em></p><ul><li>etcd单台部署，启用https以及ca自签名</li><li>etcd多台部署，启用https以及ca自签名</li></ul></blockquote><blockquote><p><em>kubernetes系列</em></p><ul><li>kubernetes master 启用RBAC、CA自签名、二进制部署全过程</li><li>kubernetes node 启用RBAC、CA自签名、二进制部署全过程</li><li>Calico集成kubernetes的CNI网络部署全过程、启用CA自签名 </li></ul></blockquote><blockquote><p><em>kubernetes组件系列</em></p><ul><li>CoreDNS 使用以及部署，统一管理kuernetes网络的DNS解析</li><li>Dnsmasq部署，统一管理物理机以及kubernetes所有网络的DNS解析</li><li>registry 私有仓库的部署，用于管理kubernetes集群中所需要的镜像</li><li>Traefik ingress使用以及部署，提供kubernetes服务入口  </li></ul></blockquote><blockquote><p><em>docker系列</em></p><ul><li>docker的安装部署</li><li>镜像的定义以及构建、修改（该部分内容后续会单独编写一个docker系列进行讲解）</li></ul></blockquote><blockquote><p><em>yum离线源系列</em></p><ul><li>针对政府级别无网络环境的centos7系列服务器集群如何无网络部署</li></ul></blockquote><blockquote><p><em>网络代理系列</em></p><ul><li>针对政府级别无网络环境，如何对正向、反向请求进行代理</li><li>如何使用ssh隧道正向、反向端口绑定以及映射转发</li></ul></blockquote><blockquote><p><em>自动化部署开发系列</em></p><ul><li>解决kubenernetes运维入门的门槛，开发使用kunernetes组件自动化部署</li><li>开发自动化部署docker </li><li>开发自动化部署etcd单台、三台脚本</li><li>开发自动化部署mysql主从</li><li>开发自动化部署dnsmasq</li></ul></blockquote><blockquote><p><em>数据如何清洗、处理系列</em></p><ul><li>面对百万计杂乱图片，如何应对整理并上传文件服务</li><li>千万级数据清洗处理全过程</li></ul></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;#原创内容，转载请注明出处&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;博主地址：&lt;a href=&quot;https://aronligithub.github.io/&quot;&gt;https://aronligithub.github.io/&lt;/a&gt;&lt;/p&gt;
&lt;h
      
    
    </summary>
    
      <category term="运维开发系列" scheme="https://aronligithub.github.io/categories/%E8%BF%90%E7%BB%B4%E5%BC%80%E5%8F%91%E7%B3%BB%E5%88%97/"/>
    
    
      <category term="kubernetes系列" scheme="https://aronligithub.github.io/tags/kubernetes%E7%B3%BB%E5%88%97/"/>
    
  </entry>
  
  <entry>
    <title>巧用VPN+XShell击破局域网服务器的TCP端口转发问题</title>
    <link href="https://aronligithub.github.io/2018/08/09/%E5%B7%A7%E7%94%A8VPN+XShell%E5%87%BB%E7%A0%B4%E5%B1%80%E5%9F%9F%E7%BD%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%9A%84TCP%E7%AB%AF%E5%8F%A3%E8%BD%AC%E5%8F%91%E9%97%AE%E9%A2%98/"/>
    <id>https://aronligithub.github.io/2018/08/09/巧用VPN+XShell击破局域网服务器的TCP端口转发问题/</id>
    <published>2018-08-09T15:43:22.000Z</published>
    <updated>2018-08-11T07:40:38.263Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>#原创内容，转载请注明出处</p></blockquote><p>博主地址：<a href="https://aronligithub.github.io/">https://aronligithub.github.io/</a></p><h2 id="工作需求"><a href="#工作需求" class="headerlink" title="工作需求"></a>工作需求</h2><hr><blockquote><p>在部署客户服务器的过程中，一开始客户<strong>无法提供VPN，无法提供公网IP映射服务器端口的情况下</strong>，作为需要部署服务的攻城狮们，<strong>该用什么样的方法来访问服务器，该用什么样的方法转发服务器部分TCP端口，提供办公室内的其他同事测试调用呢？</strong></p></blockquote><a id="more"></a><h2 id="网络环境拓扑"><a href="#网络环境拓扑" class="headerlink" title="网络环境拓扑"></a>网络环境拓扑</h2><hr><blockquote><p><img src="https://upload-images.jianshu.io/upload_images/13423234-70c9cee747c9c3dc.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="拓扑示意图"></p></blockquote><h2 id="首先在客户提供办公室临时电脑安装teamview工具"><a href="#首先在客户提供办公室临时电脑安装teamview工具" class="headerlink" title="首先在客户提供办公室临时电脑安装teamview工具"></a>首先在客户提供办公室临时电脑安装teamview工具</h2><hr><blockquote><p><strong>使用teamview工具可以透过局域网直接提供远程桌面，方便后续进行远程执行操作<br>为了方便VPN调试，另外需要关闭防火墙，或者开放防火墙的ping回显</strong><br><img src="https://upload-images.jianshu.io/upload_images/13423234-2c32828f5b9ddb7e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="teamview远程桌面"></p></blockquote><p><strong>此时通过teamview的功能，你已经可以远程桌面了，但是如果将内网的服务器的服务端口提供给公司内网的开发调用测试使用呢？</strong></p><h2 id="在客户临时电脑使用XShell访问服务器集群"><a href="#在客户临时电脑使用XShell访问服务器集群" class="headerlink" title="在客户临时电脑使用XShell访问服务器集群"></a>在客户临时电脑使用XShell访问服务器集群</h2><hr><blockquote><p><strong>使用xshell的隧道，将服务器自身的22端口绑定至客户电脑的任意端口，后续提供公司内网堡垒机访问</strong><br><img src="https://upload-images.jianshu.io/upload_images/13423234-f6dfad86ff9d6755.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p></blockquote><h2 id="使用客户临时电脑访问登陆公司搭设的VPN服务"><a href="#使用客户临时电脑访问登陆公司搭设的VPN服务" class="headerlink" title="使用客户临时电脑访问登陆公司搭设的VPN服务"></a>使用客户临时电脑访问登陆公司搭设的VPN服务</h2><blockquote><p><strong>创建windows的PPTP的VPN连接【前提条件已搭设好VPN服务器了】</strong><br><img src="https://upload-images.jianshu.io/upload_images/13423234-6bb0c0d5481df941.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p></blockquote><h2 id="从公司软路由查看客户临时电脑访问VPN后，绑定的内网IP"><a href="#从公司软路由查看客户临时电脑访问VPN后，绑定的内网IP" class="headerlink" title="从公司软路由查看客户临时电脑访问VPN后，绑定的内网IP"></a>从公司软路由查看客户临时电脑访问VPN后，绑定的内网IP</h2><blockquote><p><strong>从软路由查看IP地址</strong><br><img src="https://upload-images.jianshu.io/upload_images/13423234-f164cd5b2a272aa6.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p></blockquote><p><strong>这是IP地址是就是从客户电脑到公司内网的连同桥梁了，下面看看在公司内网是否能够ping通。</strong></p><h2 id="在公司内网堡垒机测试能够ping通客户电脑的VPN-IP地址"><a href="#在公司内网堡垒机测试能够ping通客户电脑的VPN-IP地址" class="headerlink" title="在公司内网堡垒机测试能够ping通客户电脑的VPN IP地址"></a>在公司内网堡垒机测试能够ping通客户电脑的VPN IP地址</h2><blockquote><p><img src="https://upload-images.jianshu.io/upload_images/13423234-4caa2dab0fe57830.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="从公司内网任意电脑ping"></p></blockquote><p><strong>只要能够ping通，说明这条VPN通道已经完全打通了，下一步就是访问客户端绑定服务器22端口的本地端口服务，访问登陆上服务器。</strong></p><h3 id="公司内网堡垒机测试telnet客户机的端口服务"><a href="#公司内网堡垒机测试telnet客户机的端口服务" class="headerlink" title="公司内网堡垒机测试telnet客户机的端口服务"></a>公司内网堡垒机测试telnet客户机的端口服务</h3><blockquote><p><img src="https://upload-images.jianshu.io/upload_images/13423234-55bb2e0139df3a5d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br><img src="https://upload-images.jianshu.io/upload_images/13423234-0353274eb61d1353.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p></blockquote><p><strong>其实这个时候只要能够访问上服务器，例如xshell的隧道功能，或者ssh隧道方法，可以将服务器内网的所有TCP服务全部都可以再次本地绑定，再二次或者三次提供公司内网的开发调用使用。在多年实践中，我经常是可以多层绑定，无限穿透的TCP和UDP各种端口服务的。下面就简单演示一下在公司内网使用xshell访问服务器。</strong></p><h2 id="在公司内网访问客户内网的服务器"><a href="#在公司内网访问客户内网的服务器" class="headerlink" title="在公司内网访问客户内网的服务器"></a>在公司内网访问客户内网的服务器</h2><blockquote><p><img src="https://upload-images.jianshu.io/upload_images/13423234-89292f50e31c041b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;#原创内容，转载请注明出处&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;博主地址：&lt;a href=&quot;https://aronligithub.github.io/&quot;&gt;https://aronligithub.github.io/&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;工作需求&quot;&gt;&lt;a href=&quot;#工作需求&quot; class=&quot;headerlink&quot; title=&quot;工作需求&quot;&gt;&lt;/a&gt;工作需求&lt;/h2&gt;&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;在部署客户服务器的过程中，一开始客户&lt;strong&gt;无法提供VPN，无法提供公网IP映射服务器端口的情况下&lt;/strong&gt;，作为需要部署服务的攻城狮们，&lt;strong&gt;该用什么样的方法来访问服务器，该用什么样的方法转发服务器部分TCP端口，提供办公室内的其他同事测试调用呢？&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="运维技巧积累" scheme="https://aronligithub.github.io/categories/%E8%BF%90%E7%BB%B4%E6%8A%80%E5%B7%A7%E7%A7%AF%E7%B4%AF/"/>
    
    
      <category term="windows系列运维技巧" scheme="https://aronligithub.github.io/tags/windows%E7%B3%BB%E5%88%97%E8%BF%90%E7%BB%B4%E6%8A%80%E5%B7%A7/"/>
    
  </entry>
  
</feed>
